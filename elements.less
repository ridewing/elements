.prefix(@to-prefix, @value) {
    -webkit-@{to-prefix}: @value;
       -moz-@{to-prefix}: @value;
        -ms-@{to-prefix}: @value;
         -o-@{to-prefix}: @value;
            @{to-prefix}: @value;
}

.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
    background: @color;
    background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, @start),
                               color-stop(1, @stop));
    background: -ms-linear-gradient(bottom,
                                  @start,
                                  @stop);
    background: -moz-linear-gradient(center bottom,
                                   @start 0%,
                                   @stop 100%);
    background: -o-linear-gradient(@stop,
                                 @start);
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}
.bw-gradient(@color: #F5F5F5, @start: 0, @stop: 255) {
    background: @color;
    background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, rgb(@start,@start,@start)),
                               color-stop(1, rgb(@stop,@stop,@stop)));
    background: -ms-linear-gradient(bottom,
                                  rgb(@start,@start,@start) 0%,
                                  rgb(@stop,@stop,@stop) 100%);
    background: -moz-linear-gradient(center bottom,
                                   rgb(@start,@start,@start) 0%,
                                   rgb(@stop,@stop,@stop) 100%);
    background: -o-linear-gradient(rgb(@stop,@stop,@stop),
                                 rgb(@start,@start,@start));
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",rgb(@stop,@stop,@stop),rgb(@start,@start,@start)));
}
.bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
  border-top: solid 1px @top-color;
  border-left: solid 1px @left-color;
  border-right: solid 1px @right-color;
  border-bottom: solid 1px @bottom-color;
}
.drop-shadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
    .prefix(box-shadow, @x-axis @y-axis @blur rgba(0, 0, 0, @alpha));
}
.rounded(@radius: 2px) {
    .prefix(border-radius, @radius);
}
.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
    .prefix(border-top-right-radius, @topright);
    .prefix(border-bottom-right-radius, @bottomright);
    .prefix(border-bottom-left-radius, @bottomleft);
    .prefix(border-top-left-radius, @topleft);
    .background-clip(padding-box);
}
.opacity(@opacity: 0.5) {
    .prefix(opacity, @opacity);
    -khtml-opacity: @opacity;
    @opperc: @opacity * 100;
    -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
    filter: ~"alpha(opacity=@{opperc})";
}
.transition-duration(@duration: 0.2s) {
    .prefix(transition-duration, @duration);
}
.transform(...) {
    .prefix(transform, @arguments);
}
.rotation(@deg:5deg){
    .transform(rotate(@deg));
}
.scale(@ratio:1.5){
    .transform(scale(@ratio));
}
.transition(@duration:0.2s, @ease:ease-out) {
    .prefix(transition, all @duration @ease);
}
.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
    .prefix(box-shadow, inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha));
}
.box-shadow(@arguments) {
    .prefix(box-shadow, @arguments);
}
.box-sizing(@sizing: border-box) {
    .prefix(box-sizing, @sizing);
}
.user-select(@argument: none) {
    .prefix(user-select, @argument);
}
.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
    .prefix(column-width, @colwidth);
    .prefix(column-count, @colcount);
    .prefix(column-gap, @colgap);
    .prefix(column-rule-color, @columnRuleColor);
    .prefix(column-rule-style, @columnRuleStyle);
    .prefix(column-rule-width, @columnRuleWidth);
}
.translate(@x:0, @y:0) {
    .transform(translate(@x, @y));
}
.translate3d(@x:0, @y:0, @z:0) {
    .transform(translate3d(@x, @y, @z));
}
.background-clip(@argument: padding-box) {
    .prefix(background-clip, @argument);
}
.smooth-fonts(){
    .prefix(font-smoothing, antialiased);
}